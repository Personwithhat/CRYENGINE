option(PLUGIN_SAMPLE_EDITOR_PLUGIN "Build SamplePlugin" OFF)

set(CMAKE_AUTOMOC_RELAXED_MODE TRUE)

unset(OPTION_FBX_SDK CACHE)
if (EXISTS "${SDK_DIR}/FbxSdk")
	message(STATUS "FBX SDK found in ${SDK_DIR}/FbxSdk - enabling FBX import support")
	
	# This is to update only the message in the cache that is then used in the GUI as a tooltip.
	option(OPTION_FBX_SDK "FBX SDK found in ${SDK_DIR}/FbxSdk." ON)
		
	include("${TOOLS_CMAKE_DIR}/modules/FbxSdk.cmake")
else()
	message(STATUS "FBX SDK not found in ${SDK_DIR}/FbxSdk - disabling FBX import support")
	
	# Disables the OPTION_FBX_SDK option but also updates the message in the cache that is then used in the GUI as a tooltip.
	option(OPTION_FBX_SDK "FBX SDK not found in ${SDK_DIR}/FbxSdk." OFF)
endif()

add_subdirectory("Code/Sandbox/Libs/CryQt")

set(EDITOR_DIR "Code/Sandbox/EditorQt" )
add_subdirectory("Code/Sandbox/EditorQt")
add_subdirectory("Code/Sandbox/Plugins/3DConnexionPlugin")
add_subdirectory("Code/Sandbox/Plugins/EditorConsole")

add_subdirectory("Code/Sandbox/Plugins/EditorCommon")
add_subdirectory("Code/Sandbox/EditorInterface")

add_subdirectory("Code/Sandbox/Plugins/CryDesigner")
add_subdirectory("Code/Sandbox/Plugins/EditorAudioControlsEditor")
add_subdirectory("Code/Sandbox/Plugins/EditorAudioControlsEditor/common")
if(AUDIO_FMOD)
	add_subdirectory("Code/Sandbox/Plugins/EditorAudioControlsEditor/EditorFmod")
endif()
if(AUDIO_SDL_MIXER)
	add_subdirectory("Code/Sandbox/Plugins/EditorAudioControlsEditor/EditorSDLMixer")
endif()
if(AUDIO_PORTAUDIO)
	add_subdirectory("Code/Sandbox/Plugins/EditorAudioControlsEditor/EditorPortAudio")
endif()
if (AUDIO_WWISE)
	add_subdirectory("Code/Sandbox/Plugins/EditorAudioControlsEditor/EditorWwise")
endif()
if (AUDIO_ADX2)
	add_subdirectory("Code/Sandbox/Plugins/EditorAudioControlsEditor/EditorAdx2")
endif()
add_subdirectory("Code/Sandbox/Plugins/EditorAnimation")
add_subdirectory("Code/Sandbox/Plugins/EditorDynamicResponseSystem")
add_subdirectory("Code/Sandbox/Plugins/EditorEnvironment")
add_subdirectory("Code/Sandbox/Plugins/EditorParticle")
if (PLUGIN_SCHEMATYC_EXPERIMENTAL)
	add_subdirectory("Code/Sandbox/Plugins/EditorSchematyc")
endif()
if (PLUGIN_SCHEMATYC)
	add_subdirectory("Code/Sandbox/Plugins/EditorSchematyc2")
	add_subdirectory("Code/Sandbox/Plugins/SchematycEditor")
endif()
add_subdirectory("Code/Sandbox/Plugins/EditorTrackView")
add_subdirectory("Code/Sandbox/Plugins/EditorBehaviorTree")
add_subdirectory("Code/Sandbox/Plugins/EditorUDR")
add_subdirectory("Code/Sandbox/Plugins/EditorGameSDK")
if(OPTION_FBX_SDK)
	add_subdirectory("Code/Sandbox/Plugins/FbxPlugin")
	add_subdirectory("Code/Sandbox/Plugins/MeshImporter")
endif()
add_subdirectory("Code/Sandbox/Plugins/PerforcePlugin")
add_subdirectory("Code/Sandbox/Plugins/PerforcePlugin_Legacy")
add_subdirectory("Code/Sandbox/Plugins/SandboxPythonBridge")
if (PLUGIN_SAMPLE_EDITOR_PLUGIN)
	add_subdirectory("Code/Sandbox/Plugins/SamplePlugin")
endif()
add_subdirectory("Code/Sandbox/Plugins/VehicleEditor")
add_subdirectory("Code/Sandbox/Plugins/SmartObjectEditor")
add_subdirectory("Code/Sandbox/Plugins/DialogEditor")
add_subdirectory("Code/Sandbox/Plugins/MFCToolsPlugin")
add_subdirectory("Code/Sandbox/Plugins/FacialEditorPlugin")
add_subdirectory("Code/Sandbox/Plugins/DependencyGraph")
add_subdirectory("Code/Sandbox/Plugins/MaterialEditorPlugin")
add_subdirectory("Code/Sandbox/Plugins/PrefabAssetType")
add_subdirectory("Code/Sandbox/Plugins/CryTestRunnerPlugin")
if(EXISTS "${CRYENGINE_DIR}/Code/Sandbox/Plugins/LodGeneratorPlugin")
  add_subdirectory("Code/Sandbox/Plugins/LodGeneratorPlugin")
endif()
if(OPTION_SANDBOX_SUBSTANCE)
	include("${CRYENGINE_DIR}/Tools/CMake/modules/Substance.cmake")
	add_subdirectory("Code/Sandbox/Libs/CrySubstance")
	add_subdirectory("Code/Sandbox/Plugins/EditorSubstance")
endif()
if(OPTION_CRYMONO)
	add_subdirectory("Code/Sandbox/Plugins/EditorCSharp")
endif()
if(OPTION_UNIT_TEST AND PLUGIN_SAMPLE_EDITOR_PLUGIN)
	add_subdirectory("${CRYENGINE_DIR}/Code/Sandbox/UnitTests/SamplePluginUnitTest")
endif()
#libs
add_subdirectory ("Code/Libs/prt")
add_subdirectory ("Code/Libs/python")
